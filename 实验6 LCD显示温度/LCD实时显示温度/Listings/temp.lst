C51 COMPILER V9.56.0.0   TEMP                                                              11/29/2018 18:00:24 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN .\Objects\temp.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE temp.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\temp
                    -.lst) TABS(2) OBJECT(.\Objects\temp.obj)

line level    source

   1          #include"temp.h"
   2          /*******************************************************************************
   3          * 函 数 名         : Delay1ms
   4          * 函数功能         : 延时函数
   5          * 输    入         : 无
   6          * 输    出         : 无
   7          *******************************************************************************/
   8          
   9          void Delay1ms(uint y)
  10          {
  11   1        uint x;
  12   1        for( ; y>0; y--)
  13   1        {
  14   2          for(x=110; x>0; x--);
  15   2        }
  16   1      }
  17          
  18          /*******************************************************************************
  19          * 函 数 名         : delay
  20          * 函数功能       : 延时函数，i=1时，大约延时10us
  21          *******************************************************************************/
  22          void delay(int i)
  23          {
  24   1        while(i--); 
  25   1      }
  26          
  27          /*******************************************************************************
  28          * 函 数 名         : Ds18b20Init
  29          * 函数功能         : 初始化
  30          * 输    入         : 无
  31          * 输    出         : 初始化成功返回1，失败返回0
  32          *******************************************************************************/
  33          
  34          uchar Ds18b20Init()
  35          {
  36   1        uchar i;
  37   1        DSPORT = 0;      //将总线拉低480us~960us
  38   1        i = 70; 
  39   1        while(i--);//延时642us
  40   1        DSPORT = 1;     //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  41   1        i = 0;
  42   1        while(DSPORT) //等待DS18B20拉低总线
  43   1        {
  44   2          Delay1ms(1);
  45   2          i++;
  46   2          if(i>5)//等待>5MS
  47   2          {
  48   3            return 0;//初始化失败
  49   3          }
  50   2        
  51   2        }
  52   1        return 1;//初始化成功
  53   1      }
  54          
C51 COMPILER V9.56.0.0   TEMP                                                              11/29/2018 18:00:24 PAGE 2   

  55          /*******************************************************************************
  56          * 函 数 名         : Ds18b20WriteByte
  57          * 函数功能         : 向18B20写入一个字节
  58          * 输    入         : 无
  59          * 输    出         : 无
  60          *******************************************************************************/
  61          
  62          void Ds18b20WriteByte(uchar dat)
  63          {
  64   1        uint i, j;
  65   1      
  66   1        for(j=0; j<8; j++)
  67   1        {
  68   2          DSPORT = 0;         //每写入一位数据之前先把总线拉低1us
  69   2          i++;
  70   2          DSPORT = dat & 0x01;  //然后写入一个数据，从最低位开始
  71   2          i=6;
  72   2          while(i--); //延时68us，持续时间最少60us
  73   2          DSPORT = 1; //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  74   2          dat >>= 1;
  75   2        }
  76   1      }
  77          /*******************************************************************************
  78          * 函 数 名         : Ds18b20ReadByte
  79          * 函数功能       : 读取一个字节
  80          * 输    入         : 无
  81          * 输    出         : 无
  82          *******************************************************************************/
  83          
  84          
  85          uchar Ds18b20ReadByte()
  86          {
  87   1        uchar byte, bi;
  88   1        uint i, j;  
  89   1        for(j=8; j>0; j--)
  90   1        {
  91   2          DSPORT = 0;//先将总线拉低1us
  92   2          i++;
  93   2          DSPORT = 1;//然后释放总线
  94   2          i++;
  95   2          i++;//延时6us等待数据稳定
  96   2          bi = DSPORT;   //读取数据，从最低位开始读取
  97   2          /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
  98   2          byte = (byte >> 1) | (bi << 7);             
  99   2          i = 4;    //读取完之后等待48us再接着读取下一个数
 100   2          while(i--);
 101   2        }       
 102   1        return byte;
 103   1      }
 104          /*******************************************************************************
 105          * 函 数 名         : Ds18b20ChangTemp
 106          * 函数功能       : 让18b20开始转换温度
 107          * 输    入         : 无
 108          * 输    出         : 无
 109          *******************************************************************************/
 110          
 111          void  Ds18b20ChangTemp()
 112          {
 113   1        int i;
 114   1        Ds18b20Init();
 115   1        Delay1ms(1);
 116   1        Ds18b20WriteByte(0xcc);   //跳过ROM操作命令    
C51 COMPILER V9.56.0.0   TEMP                                                              11/29/2018 18:00:24 PAGE 3   

 117   1        Ds18b20WriteByte(0x44);     //温度转换命令
 118   1        //Delay1ms(100);  //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
 119   1        if(Ds18b20AlarmSearch() != 0xff) {
 120   2          for(i = 0; i < 10; i ++) {    
 121   3            BEEP = ~BEEP; 
 122   3            delay(10);
 123   3          }
 124   2        }
 125   1      }
 126          /*******************************************************************************
 127          * 函 数 名         : Ds18b20ReadTempCom
 128          * 函数功能           : 发送读取温度命令
 129          * 输    入         : 无
 130          * 输    出         : 无
 131          *******************************************************************************/
 132          
 133          void  Ds18b20ReadTempCom()
 134          { 
 135   1        Ds18b20Init();
 136   1        Delay1ms(1);
 137   1        Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
 138   1        Ds18b20WriteByte(0xbe);  //发送读取温度命令
 139   1      }
 140          /*******************************************************************************
 141          * 函 数 名         : Ds18b20ReadTemp
 142          * 函数功能       : 读取温度
 143          * 输    入         : 无
 144          * 输    出         : 无
 145          *******************************************************************************/
 146          
 147          int Ds18b20ReadTemp()
 148          {
 149   1        int temp = 0;
 150   1        uchar tmh, tml;
 151   1        Ds18b20ChangTemp();       //先写入转换命令
 152   1        Ds18b20ReadTempCom();     //然后等待转换完后发送读取温度命令
 153   1        tml = Ds18b20ReadByte();    //读取温度值共16位，先读低字节
 154   1        tmh = Ds18b20ReadByte();    //再读高字节
 155   1        temp = tmh;
 156   1        temp <<= 8;
 157   1        temp |= tml;
 158   1        return temp;
 159   1      }
 160          
 161          /*******************************************************************************
 162          * 函 数 名         : Ds18b20SetAlarm
 163          * 函数功能           : 设置温度告警的上阙和下阙
 164          * 输    入         : TH TL
 165          * 输    出         : 无
 166          *******************************************************************************/
 167          
 168          void Ds18b20SetAlarm(int TH, int TL)
 169          {
 170   1        Ds18b20Init();
 171   1        Delay1ms(1);
 172   1        Ds18b20WriteByte(0xCC);
 173   1        Ds18b20WriteByte(0x4E);
 174   1        Ds18b20WriteByte(TH);
 175   1        Ds18b20WriteByte(TL);
 176   1      }
 177          
 178          /*******************************************************************************
C51 COMPILER V9.56.0.0   TEMP                                                              11/29/2018 18:00:24 PAGE 4   

 179          * 函 数 名         : Ds18b20AlarmSearch
 180          * 函数功能         : 告警搜索
 181          * 输    入         : 无
 182          * 输    出         : 搜索结果
 183          *******************************************************************************/
 184          
 185          
 186          int Ds18b20AlarmSearch() {
 187   1        Ds18b20Init();
 188   1        Delay1ms(1);
 189   1        Ds18b20WriteByte(0xEC);
 190   1        return Ds18b20ReadByte();
 191   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    321    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
